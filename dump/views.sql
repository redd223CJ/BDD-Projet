WITH RECURSIVE Dates_Services(SERVICE_ID, NOM_SERVICE, LUNDI, MARDI, MERCREDI, JEUDI, VENDREDI, SAMEDI, DIMANCHE, DATE_ACTUELLE, DATE_FIN) AS
(SELECT ID, NOM, LUNDI, MARDI, MERCREDI, JEUDI, VENDREDI, SAMEDI, DIMANCHE, DATE_DEBUT, DATE_FIN
FROM SERVICE

UNION ALL

SELECT d.SERVICE_ID, d.NOM_SERVICE, d.LUNDI, d.MARDI, d.MERCREDI, d.JEUDI, d.VENDREDI, d.SAMEDI, d.DIMANCHE, DATE_ADD(d.DATE_ACTUELLE, INTERVAL 1 DAY), d.DATE_FIN
FROM Dates_Services d
WHERE d.DATE_ACTUELLE < d.DATE_FIN
)

SELECT DATE_ACTUELLE, NOM_SERVICE, SERVICE_ID FROM Dates_Services
WHERE (
    (DAYOFWEEK(DATE_ACTUELLE) = 1 AND DIMANCHE = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 2 AND LUNDI = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 3 AND MARDI = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 4 AND MERCREDI = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 5 AND JEUDI = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 6 AND VENDREDI = '1') OR
    (DAYOFWEEK(DATE_ACTUELLE) = 7 AND SAMEDI = '1')
);

CREATE VIEW DatesWithExceptions AS 
(
    SELECT d.DATE_ACTUELLE, d.NOM_SERVICE, d.SERVICE_ID
    FROM Dates_Services d
    LEFT JOIN EXCEPTION e 
    ON d.DATE_ACTUELLE = e.DATE AND d.SERVICE_ID = e.SERVICE_ID AND e.CODE = '2'
    WHERE e.SERVICE_ID IS NULL

    UNION ALL

    SELECT e.DATE, s.NOM, e.SERVICE_ID
    FROM SERVICE s
    JOIN EXCEPTION e ON s.ID = e.SERVICE_ID AND e.CODE = '1'
);
-- https://sql.sh/cours/jointures left join sans intersection de B
